spring.application.name=approval-service

# Tomcat port for approval-service
server.port=7014

#mongodb database properties
spring.data.mongodb.host=localhost
spring.data.mongodb.port=27217
spring.data.mongodb.database=event-service
spring.data.mongodb.username=admin
spring.data.mongodb.password=password
spring.data.mongodb.authentication-database=admin

event.api.url=http://localhost:7013/api/event
user.api.url=http://localhost:7017/api/users

springdoc.api-docs.path=/api-docs

springdoc.swagger-ui.path=/swagger-ui

#Resilience4j
management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

# =========================  for event =====================================
resilience4j.circuitbreaker.instances.event.registerHealthIndicator=true
# sets buffer size for storing circuit breaker events
resilience4j.circuitbreaker.instances.event.event-consumer-buffer-size=10
# Track calls based on number of calls made(alternative would time-based)
resilience4j.circuitbreaker.instances.event.slidingWindowType=COUNT_BASED
# set the number to recent calls to check for success or failure
resilience4j.circuitbreaker.instances.event.slidingWindowSize=10
# defines the failure rate
resilience4j.circuitbreaker.instances.event.failureRateThreshold=50
# specifies how long the circuit stays in open state
resilience4j.circuitbreaker.instances.event.waitDurationInOpenState=5s
# limits the number of test calls allowed when the circuit breaker is in the half-open state
resilience4j.circuitbreaker.instances.event.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.event.automaticTransitionFromOpenToHalfOpenEnabled=true

# set the timeout duration for the method executions wrapped with a TimeLimiter
resilience4j.timelimiter.instances.event.timeout-duration=3s
# requires at least 5 calls to calculate failure rate and decide to transition to OPEN state
resilience4j.circuitbreaker.instances.event.minimum-number-of-calls=5

# sets the maximum number of time failed call will be retired
resilience4j.retry.instances.event.max-attempts=3

# defines how long to wait before re-trying a failed call
resilience4j.retry.instances.event.wait-duration=2s

# =========================  for user =====================================
resilience4j.circuitbreaker.instances.user.registerHealthIndicator=true
# sets buffer size for storing circuit breaker events
resilience4j.circuitbreaker.instances.user.event-consumer-buffer-size=10
# Track calls based on number of calls made(alternative would time-based)
resilience4j.circuitbreaker.instances.user.slidingWindowType=COUNT_BASED
# set the number to recent calls to check for success or failure
resilience4j.circuitbreaker.instances.user.slidingWindowSize=10
# defines the failure rate
resilience4j.circuitbreaker.instances.user.failureRateThreshold=50
# specifies how long the circuit stays in open state
resilience4j.circuitbreaker.instances.user.waitDurationInOpenState=5s
# limits the number of test calls allowed when the circuit breaker is in the half-open state
resilience4j.circuitbreaker.instances.user.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.user.automaticTransitionFromOpenToHalfOpenEnabled=true

# set the timeout duration for the method executions wrapped with a TimeLimiter
resilience4j.timelimiter.instances.user.timeout-duration=3s
# requires at least 5 calls to calculate failure rate and decide to transition to OPEN state
resilience4j.circuitbreaker.instances.user.minimum-number-of-calls=5

# sets the maximum number of time failed call will be retired
resilience4j.retry.instances.user.max-attempts=3

# defines how long to wait before re-trying a failed call
resilience4j.retry.instances.user.wait-duration=2s
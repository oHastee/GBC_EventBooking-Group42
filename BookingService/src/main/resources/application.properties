spring.application.name=BookingService

server.port=7019

spring.data.mongodb.host=localhost
spring.data.mongodb.port=27317
spring.data.mongodb.database=booking-service
spring.data.mongodb.username=admin
spring.data.mongodb.password=password
spring.data.mongodb.authentication-database=admin

room.api.url=http://localhost:7016/api/room
user.api.url=http://localhost:7017/api/users

springdoc.swagger-ui.path=/swagger-ui

springdoc.api-docs.path=/api-docs

#Resilience4j
management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

# =========================  for user =====================================
resilience4j.circuitbreaker.instances.user.registerHealthIndicator=true
# sets buffer size for storing circuit breaker events
resilience4j.circuitbreaker.instances.user.event-consumer-buffer-size=10
# Track calls based on number of calls made(alternative would time-based)
resilience4j.circuitbreaker.instances.user.slidingWindowType=COUNT_BASED
# set the number to recent calls to check for success or failure
resilience4j.circuitbreaker.instances.user.slidingWindowSize=10
# defines the failure rate
resilience4j.circuitbreaker.instances.user.failureRateThreshold=50
# specifies how long the circuit stays in open state
resilience4j.circuitbreaker.instances.user.waitDurationInOpenState=5s
# limits the number of test calls allowed when the circuit breaker is in the half-open state
resilience4j.circuitbreaker.instances.user.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.user.automaticTransitionFromOpenToHalfOpenEnabled=true

# set the timeout duration for the method executions wrapped with a TimeLimiter
resilience4j.timelimiter.instances.user.timeout-duration=3s
# requires at least 5 calls to calculate failure rate and decide to transition to OPEN state
resilience4j.circuitbreaker.instances.user.minimum-number-of-calls=5

# sets the maximum number of time failed call will be retired
resilience4j.retry.instances.user.max-attempts=3

# defines how long to wait before re-trying a failed call
resilience4j.retry.instances.user.wait-duration=2s

# =========================  for room =====================================
resilience4j.circuitbreaker.instances.room.registerHealthIndicator=true
# sets buffer size for storing circuit breaker events
resilience4j.circuitbreaker.instances.room.event-consumer-buffer-size=10
# Track calls based on number of calls made(alternative would time-based)
resilience4j.circuitbreaker.instances.room.slidingWindowType=COUNT_BASED
# set the number to recent calls to check for success or failure
resilience4j.circuitbreaker.instances.room.slidingWindowSize=10
# defines the failure rate
resilience4j.circuitbreaker.instances.room.failureRateThreshold=50
# specifies how long the circuit stays in open state
resilience4j.circuitbreaker.instances.room.waitDurationInOpenState=5s
# limits the number of test calls allowed when the circuit breaker is in the half-open state
resilience4j.circuitbreaker.instances.room.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.room.automaticTransitionFromOpenToHalfOpenEnabled=true

# set the timeout duration for the method executions wrapped with a TimeLimiter
resilience4j.timelimiter.instances.room.timeout-duration=3s
# requires at least 5 calls to calculate failure rate and decide to transition to OPEN state
resilience4j.circuitbreaker.instances.room.minimum-number-of-calls=5

# sets the maximum number of time failed call will be retired
resilience4j.retry.instances.room.max-attempts=3

# defines how long to wait before re-trying a failed call
resilience4j.retry.instances.room.wait-duration=2s

#kafka Properties
spring.kafka.bootstrap-servers=host.docker.internal:9092
spring.kafka.template.default-topic=booking-confirmed
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.type.mapping=event:ca.gbc.bookingservice.event.BookingConfirmedEvent